clear
close all

global l1 l2 l3 l4 l5 l6

l1 = 670;
l2 = 312;
l3 = 1075;
l4 = 225;
l5 = 1280;
l6 = 215;

c = 30;
% for experemets we should generate 30 configurations with 6 joints
% positions but we should take into account robot limits (joint limits)
% according to datasheet
q_values = [rand(1,c)*pi*2; rand(1,c)*pi-pi/4; rand(1,c)*pi - pi/3; rand(1,c)*pi*4; rand(1,c)*pi - pi/2; rand(1,c)*pi*4;];
q_values = q_values';

T_base = Tx(245)*Ty(371)*Tz(79);
T_tool = Ty(l6);

real_param = [0.01, 0.02, 0, 0.05, 1, 0, 0.75, 0.175, 2, 0.89, 1.21, 0, 0.55, 0.56, 0.65];

for i = 1:c
    T_robot = FK(q_values(i,:),real_param);
    T = T_base*FK(q_values(i,:),real_param)*T_tool;
    result_points(i,:) = T(1:3,4);
end

% Init - Indentification
Tbase = eye(4);
Ttool = eye(4);
param = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

% Step 1 - Identification parameters of Tool and Base transformations
for j = 1 : 50
    Sum_r = zeros(9);
    Sum_p = zeros(9,1);

    for k = 1:30
        translation = [];

        T = FK(q_values(k,:), param);
        p = T(1:3,4);

        n1 = 3;
        n2 = 9;

        A((n1-2):n1,1:3) = eye(3);
        A((n1-2):n1,4:6) = tildaP(p)';
        A((n1-2):n1, (n2-2):n2) =  T(1:3,1:3);
        translation = [(result_points(i,:)-T(1:3,4)')];

        Sum_r = Sum_r + A' * A;
        Sum_p = Sum_p + A' * translation';
    end

    c = (Sum_r \ Sum_p);

    R = eye(3);
    Tbase = [R, c(1:3); 0, 0, 0, 1];
    pt = R * c(7:9);
    Ttool = [eye(3), pt; 0, 0, 0, 1];

% Step 2 - Identification elastostatic and geometrical
% parameters of the manipulator
J = [];
translation = [];
for i = 1:30
    J = [J Jac(q_values(i,:), param, Tbase, Ttool)'];
    T = Tbase*FK(q_values(i,:), param)*Ttool;
    p = T(1:3,4);
    translation  = [translation (result_points(i,:) - p')];
end
J=J';
del_param = ((J'*J) \ (J'*translation'))';
param = param + del_param;
end

function J = Jac(q,param,T_base,T_tool)
global l1 l2 l3 l4 l5
% Zero-value matrix derivative
Htx = [0 0 0 1; 0 0 0 0; 0 0 0 0; 0 0 0 0];
Hty = [0 0 0 0; 0 0 0 1; 0 0 0 0; 0 0 0 0];
Htz = [0 0 0 0; 0 0 0 0; 0 0 0 1; 0 0 0 0];
Hrx = [0 0 0 0; 0 0 -1 0; 0 1 0 0; 0 0 0 0];
Hry = [0 0 1 0; 0 0 0 0; -1 0 0 0; 0 0 0 0];
Hrz = [0 -1 0 0; 1 0 0 0; 0 0 0 0; 0 0 0 0];

% Jacobian on all parameter values
J1 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Htx*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J2 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Hty*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J3 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))*Hry...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J4 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Hrx*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J5 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Hry*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J6 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))*Hrz...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J7 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Hrx*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J8 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Hty*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J9 = T_base * Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))*Hrz...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J10 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Hry*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J11 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Htx*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J12 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))*Hrz...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J13 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Hrx*Ty(l5)*Tz(param(14))*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J14 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Htz*Rz(param(15))...
             * Ry(q(6)) * T_tool;

J15 = T_base*Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
     * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
       * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
         * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
           * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))*Hrz...
             * Ry(q(6)) * T_tool;

J = [J1(1:3,4), J2(1:3,4), J3(1:3,4), J4(1:3,4), J5(1:3,4), J6(1:3,4),...
    J7(1:3,4), J8(1:3,4), J9(1:3,4), J10(1:3,4), J11(1:3,4), J12(1:3,4)...
    J13(1:3,4), J14(1:3,4), J15(1:3,4)];
end

function T = FK(q, param)
global l1 l2 l3 l4 l5
% Transformation matrix
% T = Tz(l1)*Rz(q1)*Ty(l2)*Rx(q2)*Tz(l3)*Rx(q3)*Tz(l4)*Ty(l5)*Ry(q4)*Rx(q5)*Ty(l6)*Ry(q6);
T = Tz(l1)*Rz(q(1))*Tx(param(1))*Ty(param(2))*Ry(param(3))...
    * Rx(q(2)+param(4))*Ty(l2)*Ry(param(5))*Rz(param(6))...
      * Rx(q(3)+param(7))*Ty(param(8))*Tz(l3)*Rz(param(9))...
        * Ry(q(4)+param(10))*Tx(param(11))*Tz(l4)*Rz(param(12))...
          * Rx(q(5)+param(13))*Ty(l5)*Tz(param(14))*Rz(param(15))...
            * Ry(q(6));
end

function P = tildaP(p)
P = [0 -p(3) p(2); p(3) 0 -p(1); -p(2) p(1) 0];
end

function R_x = Rx(q)
R_x = [1 0 0 0; 0 cos(q) -sin(q) 0; 0 sin(q) cos(q) 0; 0 0 0 1];
end
function R_y = Ry(q)
R_y = [cos(q) 0 sin(q) 0; 0 1 0 0; -sin(q) 0 cos(q) 0; 0 0 0 1];
end
function R_z = Rz(q)
R_z = [cos(q) -sin(q) 0 0; sin(q) cos(q) 0 0; 0 0 1 0; 0 0 0 1];
end
function T_x = Tx(d)
T_x = [1 0 0 d; 0 1 0 0; 0 0 1 0; 0 0 0 1];
end
function T_y = Ty(d)
T_y = [1 0 0 0; 0 1 0 d; 0 0 1 0; 0 0 0 1];
end
function T_z = Tz(d)
T_z = [1 0 0 0; 0 1 0 0; 0 0 1 d; 0 0 0 1];
end 
